{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  Unsupervised - Clustering Algorithms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing the libraries\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USER_ID</th>\n",
       "      <th>AVG_PERC</th>\n",
       "      <th>MAX_PERC</th>\n",
       "      <th>TOP3_AVG</th>\n",
       "      <th>NMOCKS</th>\n",
       "      <th>ATT</th>\n",
       "      <th>OK</th>\n",
       "      <th>ACC</th>\n",
       "      <th>AVG_ATT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>302344</td>\n",
       "      <td>62.063708</td>\n",
       "      <td>83.095410</td>\n",
       "      <td>80.68</td>\n",
       "      <td>12</td>\n",
       "      <td>636</td>\n",
       "      <td>427</td>\n",
       "      <td>67.14</td>\n",
       "      <td>53.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>304203</td>\n",
       "      <td>95.452029</td>\n",
       "      <td>99.654278</td>\n",
       "      <td>98.91</td>\n",
       "      <td>5</td>\n",
       "      <td>379</td>\n",
       "      <td>281</td>\n",
       "      <td>74.14</td>\n",
       "      <td>75.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>307798</td>\n",
       "      <td>57.080305</td>\n",
       "      <td>81.070345</td>\n",
       "      <td>65.56</td>\n",
       "      <td>5</td>\n",
       "      <td>258</td>\n",
       "      <td>165</td>\n",
       "      <td>63.95</td>\n",
       "      <td>51.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>351294</td>\n",
       "      <td>49.714915</td>\n",
       "      <td>89.949537</td>\n",
       "      <td>75.48</td>\n",
       "      <td>13</td>\n",
       "      <td>790</td>\n",
       "      <td>445</td>\n",
       "      <td>56.33</td>\n",
       "      <td>60.769231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>624217</td>\n",
       "      <td>50.327109</td>\n",
       "      <td>76.604507</td>\n",
       "      <td>65.43</td>\n",
       "      <td>7</td>\n",
       "      <td>309</td>\n",
       "      <td>203</td>\n",
       "      <td>65.70</td>\n",
       "      <td>44.142857</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USER_ID   AVG_PERC   MAX_PERC  TOP3_AVG  NMOCKS  ATT   OK    ACC    AVG_ATT\n",
       "1   302344  62.063708  83.095410     80.68      12  636  427  67.14  53.000000\n",
       "2   304203  95.452029  99.654278     98.91       5  379  281  74.14  75.800000\n",
       "5   307798  57.080305  81.070345     65.56       5  258  165  63.95  51.600000\n",
       "7   351294  49.714915  89.949537     75.48      13  790  445  56.33  60.769231\n",
       "9   624217  50.327109  76.604507     65.43       7  309  203  65.70  44.142857"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = pd.read_csv('../Data/useravg2018.csv', index_col=0)\n",
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USER_ID</th>\n",
       "      <th>AVG_PERC</th>\n",
       "      <th>MAX_PERC</th>\n",
       "      <th>TOP3_AVG</th>\n",
       "      <th>NMOCKS</th>\n",
       "      <th>ATT</th>\n",
       "      <th>OK</th>\n",
       "      <th>ACC</th>\n",
       "      <th>AVG_ATT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4.000000e+02</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.472902e+06</td>\n",
       "      <td>62.943748</td>\n",
       "      <td>80.768828</td>\n",
       "      <td>75.486350</td>\n",
       "      <td>9.697500</td>\n",
       "      <td>561.232500</td>\n",
       "      <td>363.807500</td>\n",
       "      <td>64.122975</td>\n",
       "      <td>57.140308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.023440e+05</td>\n",
       "      <td>16.367214</td>\n",
       "      <td>24.213554</td>\n",
       "      <td>22.410000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>145.000000</td>\n",
       "      <td>83.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>30.444444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.157168e+05</td>\n",
       "      <td>19.552976</td>\n",
       "      <td>17.068313</td>\n",
       "      <td>18.841274</td>\n",
       "      <td>3.252297</td>\n",
       "      <td>226.536842</td>\n",
       "      <td>157.724198</td>\n",
       "      <td>6.930649</td>\n",
       "      <td>9.730095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.945951e+06</td>\n",
       "      <td>99.512102</td>\n",
       "      <td>99.937840</td>\n",
       "      <td>99.860000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>1128.000000</td>\n",
       "      <td>780.000000</td>\n",
       "      <td>82.150000</td>\n",
       "      <td>85.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            USER_ID    AVG_PERC    MAX_PERC    TOP3_AVG      NMOCKS  \\\n",
       "count  4.000000e+02  400.000000  400.000000  400.000000  400.000000   \n",
       "mean   1.472902e+06   62.943748   80.768828   75.486350    9.697500   \n",
       "min    3.023440e+05   16.367214   24.213554   22.410000    4.000000   \n",
       "std    3.157168e+05   19.552976   17.068313   18.841274    3.252297   \n",
       "max    1.945951e+06   99.512102   99.937840   99.860000   15.000000   \n",
       "\n",
       "               ATT          OK         ACC     AVG_ATT  \n",
       "count   400.000000  400.000000  400.000000  400.000000  \n",
       "mean    561.232500  363.807500   64.122975   57.140308  \n",
       "min     145.000000   83.000000   50.000000   30.444444  \n",
       "std     226.536842  157.724198    6.930649    9.730095  \n",
       "max    1128.000000  780.000000   82.150000   85.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.describe().loc[['count', 'mean', 'min', 'std', 'max']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scale the data before applying Kmeans."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "##### Load the X variable  with columns ACC and AVG_ATT\n",
    "X=dataset[['ACC', 'AVG_ATT']].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scale the data\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Build the Elbow Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "wcss = []\n",
    "cl=[]\n",
    "for i in range(1, 11):\n",
    "    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n",
    "    kmeans.fit(X_scaled)\n",
    "    wcss.append(kmeans.inertia_)\n",
    "    cl.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'The Elbow Method')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pointplot(x=cl, y=wcss)\n",
    "plt.title('The Elbow Method')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate clusters based on selected K (=5)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fit the Algorithm and Predict\n",
    "kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)\n",
    "y_kmeans = kmeans.fit_predict(X_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>USER_ID</th>\n",
       "      <th>AVG_PERC</th>\n",
       "      <th>MAX_PERC</th>\n",
       "      <th>TOP3_AVG</th>\n",
       "      <th>NMOCKS</th>\n",
       "      <th>ATT</th>\n",
       "      <th>OK</th>\n",
       "      <th>ACC</th>\n",
       "      <th>AVG_ATT</th>\n",
       "      <th>cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>302344</td>\n",
       "      <td>62.063708</td>\n",
       "      <td>83.095410</td>\n",
       "      <td>80.68</td>\n",
       "      <td>12</td>\n",
       "      <td>636</td>\n",
       "      <td>427</td>\n",
       "      <td>67.14</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>304203</td>\n",
       "      <td>95.452029</td>\n",
       "      <td>99.654278</td>\n",
       "      <td>98.91</td>\n",
       "      <td>5</td>\n",
       "      <td>379</td>\n",
       "      <td>281</td>\n",
       "      <td>74.14</td>\n",
       "      <td>75.800000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>307798</td>\n",
       "      <td>57.080305</td>\n",
       "      <td>81.070345</td>\n",
       "      <td>65.56</td>\n",
       "      <td>5</td>\n",
       "      <td>258</td>\n",
       "      <td>165</td>\n",
       "      <td>63.95</td>\n",
       "      <td>51.600000</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>351294</td>\n",
       "      <td>49.714915</td>\n",
       "      <td>89.949537</td>\n",
       "      <td>75.48</td>\n",
       "      <td>13</td>\n",
       "      <td>790</td>\n",
       "      <td>445</td>\n",
       "      <td>56.33</td>\n",
       "      <td>60.769231</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>624217</td>\n",
       "      <td>50.327109</td>\n",
       "      <td>76.604507</td>\n",
       "      <td>65.43</td>\n",
       "      <td>7</td>\n",
       "      <td>309</td>\n",
       "      <td>203</td>\n",
       "      <td>65.70</td>\n",
       "      <td>44.142857</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   USER_ID   AVG_PERC   MAX_PERC  TOP3_AVG  NMOCKS  ATT   OK    ACC  \\\n",
       "1   302344  62.063708  83.095410     80.68      12  636  427  67.14   \n",
       "2   304203  95.452029  99.654278     98.91       5  379  281  74.14   \n",
       "5   307798  57.080305  81.070345     65.56       5  258  165  63.95   \n",
       "7   351294  49.714915  89.949537     75.48      13  790  445  56.33   \n",
       "9   624217  50.327109  76.604507     65.43       7  309  203  65.70   \n",
       "\n",
       "     AVG_ATT  cluster  \n",
       "1  53.000000        3  \n",
       "2  75.800000        4  \n",
       "5  51.600000        3  \n",
       "7  60.769231        2  \n",
       "9  44.142857        3  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# assign the cluster number to the data.\n",
    "dataset['cluster']= y_kmeans\n",
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualize the Clusters\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#get the Centroids back unscaled\n",
    "kmc = scaler.inverse_transform(kmeans.cluster_centers_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the 5 clusters\n",
    "plt.subplots(figsize=(7,7))\n",
    "\n",
    "plt.scatter(dataset[dataset.cluster==0]['ACC'], dataset[dataset.cluster==0]['AVG_ATT'], \n",
    "            s=30, label='Cluster 0')\n",
    "plt.scatter(dataset[dataset.cluster==1]['ACC'], dataset[dataset.cluster==1]['AVG_ATT'], \n",
    "            s=30, label='Cluster 1')\n",
    "plt.scatter(dataset[dataset.cluster==2]['ACC'], dataset[dataset.cluster==2]['AVG_ATT'], \n",
    "            s=30, label='Cluster 2')\n",
    "plt.scatter(dataset[dataset.cluster==3]['ACC'], dataset[dataset.cluster==3]['AVG_ATT'], \n",
    "            s=30, label='Cluster 3')\n",
    "plt.scatter(dataset[dataset.cluster==4]['ACC'], dataset[dataset.cluster==4]['AVG_ATT'], \n",
    "            s=30, label='Cluster 4')\n",
    "\n",
    "#Plot the Cluster Centroids. We need the centroids unscaled.\n",
    "kmc = scaler.inverse_transform(kmeans.cluster_centers_)\n",
    "plt.scatter(kmc[:,0], kmc[:,1], c='black', s=100, marker='^', label='Centroids')\n",
    "plt.title('Accuracy vs Avg Atts')\n",
    "plt.xlabel('Accuracy')\n",
    "plt.ylabel('Avg Att')\n",
    "plt.legend(loc=2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#intuition (two-dimension)\n",
    "#  0 - Remedial, need help to improve att (46) and accuracy (56)\n",
    "#  1 - Near Achievers, needs more attempts (60)\n",
    "#  2 - Careless , High Att (61), low accuracy (56)\n",
    "#  3 - Conservative - Good Acc (69), Too few attempts (48)\n",
    "#  4 - High Achievers , with good acc (71) and att (70)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Rename the Clusters Logically"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(7,7))\n",
    "\n",
    "plt.scatter(dataset[dataset.cluster==0]['ACC'], dataset[dataset.cluster==0]['AVG_ATT'], \n",
    "            s=30, label='Remedial')\n",
    "plt.scatter(dataset[dataset.cluster==1]['ACC'], dataset[dataset.cluster==1]['AVG_ATT'], \n",
    "            s=30, label='Near Achievers')\n",
    "plt.scatter(dataset[dataset.cluster==2]['ACC'], dataset[dataset.cluster==2]['AVG_ATT'], \n",
    "            s=30, label='Careless')\n",
    "plt.scatter(dataset[dataset.cluster==3]['ACC'], dataset[dataset.cluster==3]['AVG_ATT'], \n",
    "            s=30, label='Conservative')\n",
    "plt.scatter(dataset[dataset.cluster==4]['ACC'], dataset[dataset.cluster==4]['AVG_ATT'], \n",
    "            s=30, label='High Achievers')\n",
    "\n",
    "plt.scatter(kmc[:,0], kmc[:,1], s=100, c='black', marker='^', label='Centroids')\n",
    "plt.title('Accuracy vs Avg Atts')\n",
    "plt.xlabel('Accuracy')\n",
    "plt.ylabel('Avg Att')\n",
    "plt.legend(loc=2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Check the cluster average properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "clusters = dataset.groupby('cluster')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ACC</th>\n",
       "      <th>AVG_ATT</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cluster</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>56.805000</td>\n",
       "      <td>46.705698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>65.982178</td>\n",
       "      <td>60.266925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>56.998333</td>\n",
       "      <td>61.875983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>69.795897</td>\n",
       "      <td>48.551371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>71.328657</td>\n",
       "      <td>70.107743</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               ACC    AVG_ATT\n",
       "cluster                      \n",
       "0        56.805000  46.705698\n",
       "1        65.982178  60.266925\n",
       "2        56.998333  61.875983\n",
       "3        69.795897  48.551371\n",
       "4        71.328657  70.107743"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cldata = clusters[['ACC', 'AVG_ATT']].mean()\n",
    "cldata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
